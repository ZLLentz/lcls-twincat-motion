<?xml version='1.0' encoding='UTF-8'?>
<TcPlcObject Version="1.1.0.1">
  <POU Name="FB_LogMotionError" Id="{9500aa77-a355-4e4c-85a0-c8788ac59e2a}" SpecialFunc="None">
    <Declaration><![CDATA[
FUNCTION_BLOCK FB_LogMotionError
(*
    If the motion struct has an error, log it.

    The log condition is:
    - When bError goes TRUE (catch transition from no error to error)
    - When the error message changes while bError is TRUE (catch transition from error a to error b)

    Includes the motor name and the NC error id in the json blob
*)
VAR_IN_OUT
    stMotionStage: ST_MotionStage;
END_VAR
VAR_INPUT
    bEnable: BOOL;
END_VAR
VAR
    fbLogMessage: FB_LogMessage;
    rtNewError: R_TRIG;
    bChangedError: BOOL;
    sPrevErr: STRING;
    fbJson: FB_JsonSaxWriter;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[
rtNewError(CLK:=stMotionStage.bError);
bChangedError := stMotionStage.sErrorMessage <> '' AND stMotionStage.sErrorMessage <> sPrevErr;
sPrevErr := stMotionStage.sErrorMessage;

IF bEnable AND (rtNewError.Q OR bChangedError) THEN
    fbJson.StartObject();
    fbJson.AddKey('schema');
    fbJson.AddString('ST_MotionStage.bError');
    fbJson.AddKey('dut_name');
    fbJson.AddString(stMotionStage.sName);
    fbJson.AddKey('axis_name');
    fbJson.AddString(stMotionStage.stAxisParameters.sAxisName);
    fbJson.AddKey('axis_id');
    fbJson.AddUdint(stMotionStage.stAxisParameters.AxisId);
    fbJson.AddKey('err_id');
    fbJson.AddUdint(stMotionStage.nErrorId);
    fbJson.AddKey('position');
    fbJson.AddLreal(stMotionStage.stAxisStatus.fActPosition);
    fbJson.AddKey('position_lag');
    fbJson.AddLreal(stMotionStage.stAxisStatus.fActDiff);
    fbJson.EndObject();
    fbLogMessage.sJson := fbJson.GetDocument();
    fbLogMessage(
        sMsg := stMotionStage.sErrorMessage,
        eSevr := TcEventSeverity.Error,
        eSubsystem := E_Subsystem.MOTION,
    );
    fbJson.ResetDocument();
END_IF
]]></ST>
    </Implementation>
  </POU>
</TcPlcObject>